{"version":3,"sources":["logo.svg","App.js","components/RecommendationsSlider.js","components/Recommendations.js","history.js","index.js","routes.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","src","logo","alt","href","target","rel","Component","RecommendationsSlider","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelect","bind","assertThisInitialized","state","index","direction","selectedIndex","e","alert","concat","setState","_this$state","recommendations","length","lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","accessibility","adaptiveHeight","arrows","responsive","breakpoint","settings","initialSlide","map","recommendation","i","slug_recommended","key","height","metadata","poster_url","React","slugify","require","getRecommendations","slug","url","baseURL","console","log","xmlHttp","XMLHttpRequest","open","send","response","responseText","JSON","parse","getFromURL","Recommendations","title","match","params","_this2","lower","style","padding","src_components_RecommendationsSlider","createHistory","routes","BrowserRouter","basename","process","history","component","Route","exact","path","render","src_App_0","components_Recommendations","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3b15882e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Slider from \"react-slick\";\nimport './RecommendationsSlider.css';\n\n\n\nclass RecommendationsSlider extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n  \n      this.handleSelect = this.handleSelect.bind(this);\n  \n      this.state = {\n        index: 0,\n        direction: null\n      };\n    }\n  \n    handleSelect(selectedIndex, e) {\n      alert(`selected=${selectedIndex}, direction=${e.direction}`);\n      this.setState({\n        index: selectedIndex,\n        direction: e.direction\n      });\n    }\n  \n    render() {\n      const { index, direction } = this.state;\n              \n      var settings = {\n        dots: false,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 5,\n        slidesToScroll: 5,\n        accessibility: true,\n        adaptiveHeight: true,\n        arrows: true,\n        responsive: [\n          {\n            breakpoint: 1024,\n            settings: {\n              slidesToShow: 3,\n              slidesToScroll: 3,\n              infinite: true,\n              dots: true\n            }\n          },\n          {\n            breakpoint: 600,\n            settings: {\n              slidesToShow: 2,\n              slidesToScroll: 2,\n              initialSlide: 2\n            }\n          },\n          {\n            breakpoint: 480,\n            settings: {\n              slidesToShow: 1,\n              slidesToScroll: 1\n            }\n          }\n        ]\n      };\n\n      return (        \n        <div className=\"rec-slider\">          \n          <h2>Our Recommendations</h2>    \n          {this.props.recommendations.length > 0 &&\n            <h2>Our Recommendations</h2>           \n          } \n            {this.props.recommendations.length > 0 &&                  \n                <Slider {...settings}>\n                    {this.props.recommendations.map((recommendation, i) => ( \n                        <a href={\"https://web.docker/de_DE/films/\"+recommendation.slug_recommended} key={i}>\n                          <div >\n                              <img height={297.92} \n                                  alt=\"300x200\" \n                                  src={recommendation.metadata.poster_url} \n                                  className=\"film-img\"\n                              />\n                          </div>\n                        </a>\n                                                             \n                    ))}\n\n                </Slider>                     \n\n            }\n        </div>\n    \n      );\n    }\n  }\n  \n\n  export default RecommendationsSlider;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport RecommendationsSlider from './RecommendationsSlider';\n\nvar slugify = require('slugify')\n\nconst getFromURL = (url) => {\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open( \"GET\", url, false );\n    xmlHttp.send( null );\n    var response = xmlHttp.responseText;\n    var results = JSON.parse(response);\n\n    return results;\n}\n\nconst getRecommendations = (slug) => {\n\n    var url = baseURL + \"recommendations?slug=\" + slug;\n    console.log(url);\n\n    return getFromURL(url);\n\n}\n\nconst baseURL = 'https://ryskn4s5c5.execute-api.eu-west-1.amazonaws.com/v1/';\n\n\nclass Recommendations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {   \n            title:this.props.match.params.title,\n            slug: '',\n            recommendations: [],            \n        };        \n        \n        console.log(props);\n    }\n\n    componentWillMount(props) {\n        var title = this.state.title;\n        var slug = slugify(this.state.title,\n            {\n                lower: true  \n\n            });\n        var recommendations = getRecommendations(slug);\n\n        console.log(recommendations);\n\n        this.setState({\n            title:title,\n            slug: slug,\n            recommendations: recommendations\n        }, () => {\n            console.log(this.state)\n        })\n    }    \n\n    render() {\n        \n        return (\n            <div style={{padding: \"20px\"}}> \n                <RecommendationsSlider \n                    recommendations = {this.state.recommendations}\n                />      \n                \n            </div>\n        );\n    }\n}\n\nexport default Recommendations;","import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory()\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { makeMainRoutes } from './routes';\nconst routes = makeMainRoutes();\n\n\nReactDOM.render(\n  routes,\n  document.getElementById('root')\n);\n","// src/routes.js\n\nimport React from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport Recommendations from './components/Recommendations'\n\nimport history from './history';\n\nexport const makeMainRoutes = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL} history={history} component={App}>\n      <div>    \n        <Route exact path=\"/\" render={(props) => <App {...props} />} />    \n        <Route path=\"/title=:title\" render={(props) => <Recommendations {...props} />}/>           \n      </div>\n    </BrowserRouter>\n  );\n}"],"sourceRoot":""}